# Nginx配置示例文件
# 路径: /etc/nginx/sites-available/birthday-memory-app
# 使用方法: 
# 1. 复制此文件到 /etc/nginx/sites-available/birthday-memory-app
# 2. 修改 server_name 为您的域名
# 3. 启用站点: sudo ln -s /etc/nginx/sites-available/birthday-memory-app /etc/nginx/sites-enabled/
# 4. 测试配置: sudo nginx -t
# 5. 重启Nginx: sudo systemctl restart nginx

server {
    listen 80;
    server_name your-domain.com www.your-domain.com;  # 修改为您的域名
    
    # 重定向HTTP到HTTPS (配置SSL后取消注释)
    # return 301 https://$server_name$request_uri;
    
    # 如果不使用HTTPS，请保留以下配置
    
    # 文件上传大小限制
    client_max_body_size 50M;
    
    # 主应用代理
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 静态文件缓存优化
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        proxy_pass http://localhost:3000;
        proxy_cache_valid 200 1d;
        add_header Cache-Control "public, immutable";
    }
    
    # 静态文件直接提供
    location /static {
        alias /var/www/birthday/public;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 上传文件直接提供 (可选优化)
    location /uploads {
        alias /var/www/birthday/uploads;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # 安全设置
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    # API路由
    location /api {
        proxy_pass http://localhost:3000/api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API超时设置 (上传可能需要更长时间)
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://localhost:3000/api/health;
        access_log off;
    }
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # 日志
    access_log /var/log/nginx/birthday_access.log;
    error_log /var/log/nginx/birthday_error.log;
}

# HTTPS配置 (使用Let's Encrypt SSL证书)
# 运行以下命令配置SSL:
# sudo certbot --nginx -d your-domain.com -d www.your-domain.com

server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;  # 修改为您的域名
    
    # SSL证书路径 (Let's Encrypt自动配置)
    # ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL优化
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (可选)
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # 其他配置与HTTP版本相同
    client_max_body_size 50M;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # 注意这里是https
        proxy_cache_bypass $http_upgrade;
    }
    
    # 其他location块配置相同...
}

# 配置说明：
# 
# 1. 基础配置：
#    - 监听80端口 (HTTP) 和443端口 (HTTPS)
#    - 设置正确的域名
#    - 配置反向代理到Node.js应用 (端口3000)
#
# 2. 性能优化：
#    - 启用Gzip压缩
#    - 设置静态文件缓存
#    - 优化代理超时设置
#
# 3. 安全设置：
#    - 添加安全响应头
#    - 限制上传文件执行权限
#    - SSL/TLS配置
#
# 4. 日志配置：
#    - 访问日志和错误日志
#    - 便于问题排查和监控
